name: CI/CD Prod

on:
  push:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout source
        uses: actions/checkout@v4

      - name: 2. Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: 3. Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 4. Build jar
        run: ./gradlew clean build -x test

      - name: 5. Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: 6. Docker image Push
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/server:latest

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: 1. Checkout source
        uses: actions/checkout@v4

      - name: 2. Create .env file
        run: echo "${{ secrets.PROD_ENV }}" > .env

      - name: 3. Upload .env to Prod Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ".env"
          target: "/home/ubuntu/chikahae-prod/docker/"

      - name: 3. docker-compose.yml 전달
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "./docker/docker-compose.prod.yml"
          target: "/home/ubuntu/chikahae-prod/"

      - name: 4. SSH to Dev Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/chikahae-dev/docker/
            docker pull ${{ secrets.DOCKER_USERNAME }}/server:latest
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d
